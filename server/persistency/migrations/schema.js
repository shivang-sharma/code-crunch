const userSchema = `CREATE TABLE P_USER (
    USER_ID INTEGER AUTO_INCREMENT NOT NULL,
    USERNAME VARCHAR(100) NOT NULL UNIQUE,
    USER_FIRST_NAME VARCHAR(50),
    USER_LAST_NAME VARCHAR(50),
    USER_EMAIL VARCHAR(100),
    USER_PASSWORD VARCHAR(300),
    USER_PROFILE_PHOTO_URL VARCHAR(300),
    USER_AUTH_MECHANISM ENUM('BASIC', 'GOOGLE', 'GITHUB'),
    PRIMARY KEY (USER_ID)
);`;
const googleOAuthSchema = `CREATE TABLE P_GOOGLE_OAUTH (
    GOOGLE_OAUTH_ID VARCHAR(100) NOT NULL,
    GOOGLE_OAUTH_REFRESH_TOKEN VARCHAR(400),
    USER_ID INTEGER,
    PRIMARY KEY (GOOGLE_OAUTH_ID),
    FOREIGN KEY (USER_ID) REFERENCES P_USER(USER_ID)
);`;
const languageSchema = `CREATE TABLE P_LANGUAGE (
    LANGUAGE_ID INTEGER AUTO_INCREMENT NOT NULL,
    LANGUAGE_NAME VARCHAR(12) NOT NULL UNIQUE,
    LANGUAGE_SANDBOX VARCHAR(20) NOT NULL UNIQUE,
    PRIMARY KEY (LANGUAGE_ID)
);`;
const problemSchema = `CREATE TABLE P_PROBLEM (
    PROBLEM_ID INTEGER AUTO_INCREMENT NOT NULL,
    PROBLEM_NAME VARCHAR(40) NOT NULL UNIQUE,
    PROBLEM_DESCRIPTION TEXT NOT NULL,
    PROBLEM_TESTCASE MEDIUMTEXT,
    PROBLEM_TIMEOUT INTEGER NOT NULL,
    PROBLEM_DIFFICULTY ENUM('EASY', 'MEDIUM', 'HARD'),
    PROBLEM_ACCEPTANCE INTEGER,
    PROBLEM_TEMPLATE TEXT,
    PRIMARY KEY (PROBLEM_ID)
);`;
const submissionSchema = `CREATE TABLE P_SUBMISSION (
    SUBMISSION_ID INTEGER AUTO_INCREMENT NOT NULL,
    SUBMISSION TEXT NOT NULL,
    SUBMISSION_LANG_ID INTEGER NOT NULL,
    SUBMISSION_STATUS ENUM('ACCEPTED', 'REJECTED'),
    SUBMISSION_PROBLEM_ID INTEGER NOT NULL, 
    SUBMISSION_RESULT TEXT,
    SUBMISSION_USER_ID INTEGER NOT NULL,
    PRIMARY KEY (SUBMISSION_ID),
    FOREIGN KEY (SUBMISSION_PROBLEM_ID) REFERENCES P_PROBLEM(PROBLEM_ID),
    FOREIGN KEY (SUBMISSION_USER_ID) REFERENCES P_USER(USER_ID),
    FOREIGN KEY (SUBMISSION_LANG_ID) REFERENCES P_LANGUAGE(LANGUAGE_ID)
);`;
const schemaName = [
    'P_GOOGLE_OAUTH',
    "P_SUBMISSION",
    "P_PROBLEM",
    "P_LANGUAGE",
    "P_USER"
]
module.exports = {
    schemas: [
        userSchema,
        languageSchema,
        problemSchema,
        submissionSchema,
        googleOAuthSchema
    ],
    schemaNames: schemaName
};
